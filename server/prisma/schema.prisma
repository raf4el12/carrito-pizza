generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  cliente
  administrador
  repartidor
}

enum ProductStatus {
  activo
  inactivo
}

enum Position {
  completa
  mitad_izquierda
  mitad_derecha
}

enum Action {
  extra
  normal
  quitar
}

enum OrderStatus {
  pendiente
  aceptado
  en_camino
  entregado
  cancelado
}

enum PaymentMethod {
  tarjeta
  billetera_virtual
  efectivo
}

enum PaymentStatus {
  pendiente
  pagado
  fallido
  reembolsado
}

enum DiscountType {
  porcentaje
  monto_fijo
}

enum RestrictionType {
  producto
  categoria
}

enum TransactionStatus {
  exitoso
  fallido
  pendiente
}

model Usuarios {
  id_usuario            Int                              @id @default(autoincrement())
  nombre                String                           @db.VarChar(100)
  apellido              String                           @db.VarChar(100)
  email                 String                           @unique @db.VarChar(255)
  username              String                           @unique @db.VarChar(255)
  contrase√±a_encriptada String                           @db.VarChar(255)
  telefono              String?                          @db.VarChar(20)
  direccion             String?                          @db.VarChar(255)
  rol                   Role
  fecha_registro        DateTime                         @default(now()) @db.Timestamp(0)
  activo                Boolean                          @default(true)
  Pedidos_Cliente       Pedidos[]                        @relation("ClientePedidos")
  Pedidos_Repartidor    Pedidos[]                        @relation("RepartidorPedidos")
  Cupones_Creados       Cupones[]
  Carrito_Items         Carrito[]
  Historial_Cambios     Historial_Estado_Pedido[]
  Tokens_Recuperacion   tokens_recuperacion_contrasena[]
}

model Categorias {
  id_categoria     Int         @id @default(autoincrement())
  nombre_categoria String      @unique @db.VarChar(100)
  descripcion      String?     @db.Text
  Productos        Productos[]
}

model Productos {
  id_producto    Int                  @id @default(autoincrement())
  id_categoria   Int
  nombre         String               @db.VarChar(255)
  descripcion    String?              @db.Text
  imagen_url     String?              @db.VarChar(255)
  estado         ProductStatus        @default(activo)
  fecha_creacion DateTime             @default(now()) @db.Timestamp(0)
  Categoria      Categorias           @relation(fields: [id_categoria], references: [id_categoria])
  Variantes      Variantes_Producto[]
}

model Tamanos {
  id_tamano   Int                  @id @default(autoincrement())
  nombre      String               @unique @db.VarChar(100)
  descripcion String?              @db.VarChar(255)
  Variantes   Variantes_Producto[]
}

model Tipos_Masa {
  id_tipo_masa     Int                  @id @default(autoincrement())
  nombre           String               @unique @db.VarChar(100)
  precio_adicional Decimal              @default(0.00) @db.Decimal(10, 2)
  Variantes        Variantes_Producto[]
}

model Ingredientes {
  id_ingrediente   Int                           @id @default(autoincrement())
  nombre           String                        @unique @db.VarChar(100)
  precio_adicional Decimal                       @db.Decimal(10, 2)
  stock_disponible Int                           @default(0)
  activo           Boolean                       @default(true)
  CarritoItems     Carrito_Ingredientes[]
  PedidoItems      Detalle_Pedido_Ingredientes[]
}

model Variantes_Producto {
  id_variante  Int              @id @default(autoincrement())
  id_producto  Int
  id_tamano    Int
  id_tipo_masa Int?
  precio_base  Decimal          @db.Decimal(10, 2)
  sku          String?          @unique @db.VarChar(100)
  activo       Boolean          @default(true)
  Producto     Productos        @relation(fields: [id_producto], references: [id_producto])
  Tamano       Tamanos          @relation(fields: [id_tamano], references: [id_tamano])
  Tipo_Masa    Tipos_Masa?      @relation(fields: [id_tipo_masa], references: [id_tipo_masa])
  CarritoItems Carrito[]
  PedidoItems  Detalle_Pedido[]

  @@unique([id_producto, id_tamano, id_tipo_masa], name: "uk_variante")
}

model Carrito {
  id_carrito    Int                    @id @default(autoincrement())
  id_cliente    Int
  id_variante   Int
  cantidad      Int
  fecha_adicion DateTime               @default(now()) @db.Timestamp(0)
  Cliente       Usuarios               @relation(fields: [id_cliente], references: [id_usuario], onDelete: Cascade)
  Variante      Variantes_Producto     @relation(fields: [id_variante], references: [id_variante], onDelete: Cascade)
  Ingredientes  Carrito_Ingredientes[]
}

model Carrito_Ingredientes {
  id_carrito_ingrediente Int          @id @default(autoincrement())
  id_carrito             Int
  id_ingrediente         Int
  posicion               Position     @default(completa)
  accion                 Action       @default(extra)
  CarritoItem            Carrito      @relation(fields: [id_carrito], references: [id_carrito], onDelete: Cascade)
  Ingrediente            Ingredientes @relation(fields: [id_ingrediente], references: [id_ingrediente])
}

model Pedidos {
  id_pedido              Int                       @id @default(autoincrement())
  id_cliente             Int
  fecha_pedido           DateTime                  @default(now()) @db.Timestamp(0)
  estado_pedido          OrderStatus               @default(pendiente)
  total_pedido           Decimal                   @db.Decimal(10, 2)
  direccion_entrega      String                    @db.VarChar(255)
  notas_cliente          String?                   @db.Text
  id_repartidor          Int?
  id_cupon_aplicado      Int?
  descuento_aplicado     Decimal                   @default(0.00) @db.Decimal(10, 2)
  metodo_pago            PaymentMethod
  estado_pago            PaymentStatus             @default(pendiente)
  fecha_entrega_estimada DateTime?                 @db.DateTime(0)
  Cliente                Usuarios                  @relation("ClientePedidos", fields: [id_cliente], references: [id_usuario])
  Repartidor             Usuarios?                 @relation("RepartidorPedidos", fields: [id_repartidor], references: [id_usuario])
  Cupon                  Cupones?                  @relation(fields: [id_cupon_aplicado], references: [id_cupon])
  Detalles               Detalle_Pedido[]
  Pagos                  Pagos[]
  Historial_Estados      Historial_Estado_Pedido[]
}

model Detalle_Pedido {
  id_detalle_pedido               Int                           @id @default(autoincrement())
  id_pedido                       Int
  id_variante                     Int
  cantidad                        Int
  precio_base_unitario            Decimal                       @db.Decimal(10, 2)
  precio_ingredientes_adicionales Decimal                       @db.Decimal(10, 2)
  subtotal                        Decimal                       @db.Decimal(10, 2)
  Pedido                          Pedidos                       @relation(fields: [id_pedido], references: [id_pedido], onDelete: Cascade)
  Variante                        Variantes_Producto            @relation(fields: [id_variante], references: [id_variante])
  Ingredientes                    Detalle_Pedido_Ingredientes[]
}

model Detalle_Pedido_Ingredientes {
  id_detalle_ingrediente      Int            @id @default(autoincrement())
  id_detalle_pedido           Int
  id_ingrediente              Int
  nombre_ingrediente          String         @db.VarChar(100)
  precio_ingrediente_unitario Decimal        @db.Decimal(10, 2)
  posicion                    Position       @default(completa)
  accion                      Action         @default(extra)
  DetallePedido               Detalle_Pedido @relation(fields: [id_detalle_pedido], references: [id_detalle_pedido], onDelete: Cascade)
  Ingrediente                 Ingredientes   @relation(fields: [id_ingrediente], references: [id_ingrediente])
}

model Cupones {
  id_cupon            Int                     @id @default(autoincrement())
  codigo              String                  @unique @db.VarChar(50)
  tipo_descuento      DiscountType
  valor_descuento     Decimal                 @db.Decimal(10, 2)
  fecha_inicio        DateTime                @db.Date
  fecha_fin           DateTime                @db.Date
  cantidad_disponible Int?
  monto_minimo_compra Decimal                 @default(0.00) @db.Decimal(10, 2)
  activo              Boolean                 @default(true)
  creado_por_admin    Int
  Creado_Por          Usuarios                @relation(fields: [creado_por_admin], references: [id_usuario])
  Pedidos_Aplicados   Pedidos[]
  Restricciones       Restricciones_Cupon[]
}

model Restricciones_Cupon {
  id_restriccion   Int             @id @default(autoincrement())
  id_cupon         Int
  tipo_restriccion RestrictionType
  id_referencia    Int
  Cupon            Cupones         @relation(fields: [id_cupon], references: [id_cupon], onDelete: Cascade)
}

model Pagos {
  id_pago                Int               @id @default(autoincrement())
  id_pedido              Int
  monto                  Decimal           @db.Decimal(10, 2)
  metodo_pago            PaymentMethod
  estado_transaccion     TransactionStatus
  fecha_pago             DateTime          @default(now()) @db.Timestamp(0)
  referencia_transaccion String?           @db.VarChar(255)
  Pedido                 Pedidos           @relation(fields: [id_pedido], references: [id_pedido])
}

model Historial_Estado_Pedido {
  id_historial         Int       @id @default(autoincrement())
  id_pedido            Int
  estado_anterior      String?   @db.VarChar(50)
  estado_nuevo         String    @db.VarChar(50)
  fecha_cambio         DateTime  @default(now()) @db.Timestamp(0)
  cambiado_por_usuario Int?
  Pedido               Pedidos   @relation(fields: [id_pedido], references: [id_pedido], onDelete: Cascade)
  Usuario              Usuarios? @relation(fields: [cambiado_por_usuario], references: [id_usuario])
}

model tokens_recuperacion_contrasena {
  id_token         Int      @id @default(autoincrement())
  id_usuario       Int
  token            String   @unique @db.VarChar(255)
  fecha_expiracion DateTime @db.DateTime(0)
  usado            Boolean  @default(false)
  Usuario          Usuarios @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
}